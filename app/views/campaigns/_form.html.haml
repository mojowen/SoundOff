= form_for @campaign do |f|

	= f.text_area :name, :placeholder => 'Name of Campaign*', :counter => 25, :rows => 2
	.help Keep it short and snappy! This name will appear with your campaign.

	.count 25


	= f.text_field :hashtag, :placeholder => 'Campaign Hashtag*', :counter => 15
	.help Make it original! If it’s already been used for a SoundOff campaign, you’ll need to pick another or get permission.
	.count 15
	.extra #

	= f.text_area :description, :placeholder => 'Describe Your Campaign*', :counter => 175, :rows => 10
	.help{ :style => 'margin-top: -302px;' } This will appear on your campaign page for all to see. A few ground rules... SoundOff is meant for advocating policy positions, priorities and legislation. You can’t use it to sell a product, promote discrimination or violence, intimidate, defame, or advocate the overthrow of the U.S. government. More details can be found in the Partner Terms of Service
	.count 175

	- if current_user.admin || current_user.partner.partner_type == 'nonprofit'
		.email_options.radio
			%h2 Email Options

			.line
				= f.radio_button :email_option, 'optional', :checked => 'checked'
				%label Optional
			.help Users are prompted for their email address - but it's optional

			.line
				= f.radio_button :email_option, 'required'
				%label Required
			.help Users are required to enter their email address - but can still opt out of email lists

			.line
				= f.radio_button :email_option, 'hidden'
				%label Hidden
			.help Users are not prompted for their email address and emails are not saved
		%a.click_more{ :onclick => '$(this).next(".more").slideToggle(); $(".help").removeClass("on")' } Learn More About Email Address Collection

		%div.more
			%p If you request or require e-mail addresses, users e-mails will be available for you to download. They’ll also be added to the HeadCount mailing list. However, any user can opt-out of being added to your mailing list by unchecking a permission box, or opt-out of our mailing list by unchecking a separate box.

			%p
				In addition, any email that is prepopulate from a URL parameter will
				%strong{ :style => 'text-decoration: underline'} not
				be added to the HeadCount/SoundOff mailing list or be asked to provide any permissions. But that user will be noted as having taken action in the user information download.

			%p Email addresses - along with zip codes, messages, and target's twitter handles - can be added to your campaign's shortlink to open the #SoundOff form automatically and prepopulate that information. This is especially handy if asking users to take action from an email blast wher etheir email and or zip are already known.

			%p Emails will still be collected in this case - but they will not be asked to opt-in to HeadCount mailing list nor will they be shared with HeadCount.

	.targets.radio.line
		%h2 Targets

		= f.radio_button :target, 'house', :checked => 'checked'
		%label US House of Representatives
		%br
		= f.radio_button :target, 'senate'
		%label US Senate
		%br
		= f.radio_button :target, 'all'
		%label Both Chambers

	.help Who do you want to target, one House Rep, two Senators, or all three?

	.suggested.line
		%input{ :type => 'checkbox', :checked => @campaign.new_record? || @campaign.suggested.length > 1 }
		%label Include Suggested Tweets

		.suggested_tweets
			- 4.times do |index|
				- if index == 0
					- if @campaign.new_record? || ( @campaign.suggested[index]  rescue false) || ( @campaign.suggested[index.to_s]  rescue false)
						%textarea.no_hide{ :placeholder => 'Tweet Suggestion #1', :name => 'campaign[suggested][0]', :counter => 240 }= ( @campaign.suggested[index] || @campaign.suggested[index.to_s] rescue '' )
						.count 240
					- else
						%textarea.no_hide{ :placeholder => 'Tweet Suggestion #1', :name_off => 'campaign[suggested][0]', :style => 'display:none' , :counter => 240 }
						.count{ :style => 'display:none' } 240
				- else
					- if ( @campaign.suggested[index] || @campaign.suggested[index.to_s] rescue false)
						%textarea.no_hide{ :placeholder => "Tweet Suggestion \##{index+1}", :name => "campaign[suggested][#{index}]", :counter => 240 }= ( @campaign.suggested[index] || @campaign.suggested[index.to_s] rescue '')
						.count 240
					- else
						%textarea.no_hide{ :placeholder => "Tweet Suggestion \##{index+1}", :name_off => "campaign[suggested][#{index}]", :style => 'display:none', :counter => 240 }
						.count{ :style => 'display:none' } 240
	.help{ :style => 'margin-top: -140px'} Here’s where you can get creative. We suggest making each suggestion distinct from each other. Feel free to add additional hashtags or links. Keep in mind that the campaign hashtag will automatically appear at the end of all the tweets. Don’t write that hashtag into your suggested tweets, unless you want it to appear twice.

	.notice
		Once you submit your campaign it will need to be approved by HeadCount - you'll get a notice when it's good to go.
	%button
		- if @campaign.new_record?
			Create

		- else
			Update

		&nbsp;
		%span #S
		ound
		%span O
		ff
	.errors

:javascript
	$(document).ready( function() { $('input,textarea').keydown() })
	.on('click','.radio label',function() {
		this.previousElementSibling.click()
	})
	.on('keydown change','textarea, input',function(e){
		var $this = $(this),
			txt = $this.val()
		if( e.metaKey && ( e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86 || e.keyCode == 90 ) ) {
			return setTimeout( function() { $this.change() },10)
		}
		console.log(e)
		if( $this.is('#campaign_hashtag') ) {
			txt = txt.replace(/\s|\#/,'')
			$this.val(txt)
		}
		var count = parseInt($this.attr('counter')) - txt.length,
			oops = count < 0 ? 'oops' : ''

		$this.nextAll('.count:first').text( count ).removeClass('oops').addClass(oops)

	})
	.on('click','.suggested label',function() {
		return $(this).prev().click()
	})
	.on('click','.suggested input[type=checkbox]',function() {
		var $this = $(this)

		if( $this.is(':checked') ) {
			var $next = $this.nextAll('.suggested_tweets').find('textarea:first')
			$next.show().change().attr('name', $next.attr('name_off') ).attr('name_off', null ).next('.count').show();
		} else $this.nextAll('.suggested_tweets').find('textarea').hide().each( function(){
			var $next = $(this)
			$next.attr('name_off', $next.attr('name') ).attr('name', null ).next('.count').hide()
		})
	})
	.on('keydown change','.suggested_tweets textarea',function(e) {
		var $this = $(this),
			$next = $this.nextAll('textarea:first')
		if( $this.val().length > 0 || e.keyCode == 13 ) $next.show().change().attr('name', $next.attr('name_off') ).attr('name_off', null ).next('.count').show()
		else $this.nextAll('textarea:first').hide().attr('name_off', $next.attr('name') ).attr('name', null ).next('.count').hide()
		if( e.keyCode == 13 ) e.preventDefault();
	})
	.on('focus','input, textarea',function() {
		var $this = $(this)
		if( ! $this.hasClass('no_hide') ) {
			$('.help').removeClass('on')
			$this.next().addClass('on')
		}
	})
	.on('mouseover','.line',function(){
		$('.help').removeClass('on')
		$(this).next().addClass('on')
	})
	.on('blur','input',function(){
		var $this = $(this)
		if( $this.val().length > 0 ) $this.removeClass('oops')
	})
	.on('submit','form',function(e){
		var errors = [],
			$errors = $('.errors').html('')

		$('input:visible, textarea:visible').removeClass('oops').not('[type=radio],[type=checkbox]').each( function() {
			var $input = $(this)
			if( ($input.val().length < 1 && $input.attr('placeholder').search(/\*/) !== -1) ) {
				errors.push( $input.addClass('oops').attr('placeholder').replace(/\*/g,'').toLowerCase() + ' cannot be empty' )
			}
			if( $input.val().length > parseInt( $input.attr('counter') ) ) {
				errors.push( $input.addClass('oops').attr('placeholder').replace(/\*/g,'').toLowerCase() + ' is too long' )
			}
		})

		if( errors.length ) {
			e.preventDefault();
			last = errors.pop()
			errors = errors.length == 0 ? last : errors.join(', ') + ', and '+last
			$errors.text( errors )
		}
	})
	.on('change', '.targets.radio', function(e){
		var counter = $(campaign_target_all).is(':checked') ? 65 : 80;

		$('.suggested_tweets textarea').each( function() {
			$(this).attr('counter',counter).trigger('keydown');
		})

	})
